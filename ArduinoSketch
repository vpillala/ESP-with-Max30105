#include <Wire.h>
#include "MAX30105.h"
#include "spo2_algorithm.h"
#include <WiFi.h>
#include <ThingSpeak.h>

// WiFi credentials
const char* ssid = "YOUR_WIFI_SSID";
const char* password = "YOUR_WIFI_PASSWORD";

// Thingspeak settings
unsigned long channelID = YOUR_CHANNEL_ID;
const char* apiKey = "YOUR_THINGSPEAK_API_KEY";

WiFiClient client;

// MAX30105 sensor
MAX30105 particleSensor;

// Sensor data
int32_t heartRate;
int8_t validHeartRate;
int32_t spo2;
int8_t validSpO2;

void setup() {
  Serial.begin(115200);

  // Initialize WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");

  // Initialize Thingspeak
  ThingSpeak.begin(client);

  // Initialize MAX30105
  if (!particleSensor.begin(Wire, I2C_SPEED_FAST)) {
    Serial.println("MAX30105 sensor not found. Please check wiring.");
    while (1);
  }
  Serial.println("MAX30105 sensor initialized.");

  // Configure sensor
  particleSensor.setup();
  particleSensor.setPulseAmplitudeRed(0x0A);
  particleSensor.setPulseAmplitudeGreen(0);
}

void loop() {
  // Read sensor data
  heartRate = particleSensor.getHeartRate();
  spo2 = particleSensor.getSpO2();

  // Print data to Serial Monitor
  Serial.print("Heart Rate: ");
  Serial.print(heartRate);
  Serial.print(" bpm, SpO2: ");
  Serial.print(spo2);
  Serial.println(" %");

  // Upload data to Thingspeak
  ThingSpeak.setField(1, heartRate);
  ThingSpeak.setField(2, spo2);
  int status = ThingSpeak.writeFields(channelID, apiKey);
  if (status == 200) {
    Serial.println("Data uploaded to Thingspeak successfully.");
  } else {
    Serial.println("Error uploading data to Thingspeak.");
  }

  delay(15000); // Wait 15 seconds before next reading
}
